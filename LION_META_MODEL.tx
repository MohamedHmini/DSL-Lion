MainRule:
    rules*=GeneralRule
;

GeneralRule:
    (Load | Save | Drop | Modify | Rename | Set | Impute | Map | Encode | Partition | Normalize | Standardize ) ';'
;

FILEPATH:
    /(\/)?([a-zA-Z0-1_.]+(\/)?)*[a-zA-Z0-9_.]+/ 
;

Encapsulated_FILEPATH:
    ('"' file_path=FILEPATH '"' | "'" file_path=FILEPATH "'")
;

FeatureVal:
    ID | STRING
;

Feature:
    dtype=Dtype v_name=FeatureVal 
;


Load:
    'FROM' file_path=Encapsulated_FILEPATH 'LOAD' ((only?='ONLY')? '(' 
        features+=Feature
        (',' features+=Feature )*
    ')')? 'AS' name=ID ('SPLIT' 'USING' sep=STRING)?
;

Save:
    'SAVE' ('LIONFRAME' lionFrame=[Load] | 'CODE') 'AS' file_path=Encapsulated_FILEPATH
;

Drop:
    'ALTER' 'LIONFRAME' lionFrame=[Load] 'DROP' 
    ( 'FEATURE' features=FeatureVal (',' features+=FeatureVal)* 
    |  nan?="NAN" (axis='FEATURE' | axis='ROW') Dropna_subset? DropByTreshOrHow?
    )
;

Dropna_subset:
    'ON' 'SUBSET' '(' features=FeatureVal (',' features+=FeatureVal)* ')'
;

DropByTreshOrHow:
    'WITH' ('FEWER' 'THAN' thresh=INT | (how='ALL' | how='ANY') 'NAN')
;

Column:
    v_name=FeatureVal type=Dtype
;

Modify:
    'ALTER' 'LIONFRAME' lionFrame=[Load] 'MODIFY' 'FEATURE' columns=Column (',' columns+=Column)*
;

OldToNewName:
    old_feature=FeatureVal 'TO' new_feature=FeatureVal
;

Rename:
    'ALTER' 'LIONFRAME' lionFrame=[Load] 'RENAME' 'FEATURE' columnNewNames=OldToNewName (',' columnNewNames+=OldToNewName)*
;

Assign:
    feature=FeatureVal '=' val=GeneralType
;

Set:
    'UPDATE' lionFrame=[Load] 'SET' assigns=Assign (',' assigns+=Assign)* (Where)?
;

Cmp:
    (feature=FeatureVal op=Operator val=GeneralType) | 
    (val=GeneralType op=Operator feature=FeatureVal)
;


And:
    left=Or ('AND' right=Or)*
;

Or:
    left=Not ('OR' right=Not)*
;

Not:
    ('NOT' Primary) | Primary
;

Primary:
    Cmp | '(' And ')'
;

Where:
    'WHERE' And
;


Impute:
    'UPDATE' lionFrame=[Load] 'IMPUTE' assigns=Assign (',' assigns+=Assign)* 'USING' stragety=ImputationStrategy
;

Map:
    'UPDATE' lionFrame=[Load] 'MAP' mapcolumns=MapColumn (',' mapcolumns+=MapColumn)*
;

MapColumn:
    feature=FeatureVal 'USING' MapDict
;

MapDict:
    '(' categories=MapTo (',' categories+=MapTo)* ')'
;

MapTo:
    category=STRING ':' val=INT
;

Encode:
    'UPDATE' lionFrame=[Load] 'ENCODE' features=FeatureVal (',' features+=FeatureVal)*
;

Partition:
    'PARTITION' 'LIONFRAME' lionFrame=[Load] 'INTO'
    (
        ('(' lf_train=ID ':' (train_size=FLOAT '%' | train_size=FLOAT) ')' ',' (lf_test=ID | ('(' lf_test=ID ')'))) |
        ( (lf_train=ID | ('(' lf_train=ID ')')) ',' '(' lf_test=ID ':' (test_size=FLOAT '%' | test_size=FLOAT) ')')
    )
;

Normalize:
    'UPDATE' lionFrame=[Load] 'NORMALIZE' (features=FeatureVal | ('(' features=FeatureVal (',' features+=FeatureVal)* ')') )
    'SCALE' (way='INTO' | way='USING') scaler=ID
;

Standardize:
    'UPDATE' lionFrame=[Load] 'STANDARDIZE' (features=FeatureVal | ('(' features=FeatureVal (',' features+=FeatureVal)* ')') )
    'SCALE' (way='INTO' | way='USING') scaler=ID
;

GeneralType:
    STRING | FLOAT | INT | 'NaN'
;

Operator:
    '==' | '<=' | '>=' | '<' | '>' | '!='
;

Dtype:
    'int8' | 'int16' | 'int32' | 'int64' | 'uint8' | 'uint16' | 'uint32' | 'uint64' | 'float16' | 'float32' | 'float64' | 'complex64' | 'complex128' | 'bool' | 'object' | 'bytes' | 'str' | 'void'
;

ImputationStrategy:
    'MEAN' | 'MEDIAN' | 'MOST_FREQUENT'
;

Algo:
    'CHI2' | 'IMPUTATION' | 'Z-SCORE' | 'MIN-MAX-SCORE'
;


Comment:
  /#.*$/
;







